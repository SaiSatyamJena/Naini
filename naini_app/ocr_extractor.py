# naini_app/ocr_extractor.py

# Placeholder: Update pytesseract version if needed
import pytesseract
from PIL import Image
import logging
from pathlib import Path

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# Placeholder: Add language options ('hin', 'eng+hin'), config options if needed
def extract_text_from_image(image_path_or_object, lang='eng'):
    """
    Extracts text from an image file or PIL Image object using Tesseract.

    Args:
        image_path_or_object: Path to the image file or a PIL Image object.
        lang: Language model(s) for Tesseract (e.g., 'eng', 'hin', 'eng+hin').

    Returns:
        Extracted text as a string, or an empty string if an error occurs.
    """
    try:
        # Tesseract needs language data packs installed (e.g., apt-get install tesseract-ocr-eng tesseract-ocr-hin)
        # The Dockerfile should handle 'tesseract-ocr' base install. Language packs might need adding.
        # Let's add a check and instruction
        # Check available languages (optional, requires command line access or specific pytesseract version)
        # try:
        #     available_langs = pytesseract.get_languages(config='')
        #     required_langs = lang.split('+')
        #     missing_langs = [l for l in required_langs if l not in available_langs]
        #     if missing_langs:
        #          logging.warning(f"Tesseract language packs missing: {missing_langs}. Install via apt-get install tesseract-ocr-<lang>")
        # except pytesseract.TesseractNotFoundError:
        #     logging.error("Tesseract is not installed or not in PATH.")
        #     return ""
        # except Exception as lang_err:
        #      logging.warning(f"Could not check tesseract languages: {lang_err}")

        text = pytesseract.image_to_string(image_path_or_object, lang=lang)
        logging.debug(f"OCR extracted text (length {len(text)}) for lang '{lang}'")
        return text.strip() # Return stripped text
    except pytesseract.TesseractNotFoundError:
        logging.error("Tesseract executable not found. Make sure it's installed and in PATH.")
        return ""
    except Exception as e:
        logging.error(f"Error during OCR extraction (lang={lang}): {e}", exc_info=True)
        return ""

if __name__ == '__main__':
    # Example usage needs an image file
    print("Testing ocr_extractor.py...")
    # Use one of the images generated by pdf_processor.py if available
    test_image = "data/output_images/test_run/page_01.png"
    if Path(test_image).exists():
        # Test with English
        text_eng = extract_text_from_image(test_image, lang='eng')
        print("\n--- Extracted Text (English) ---")
        print(text_eng[:500] + "..." if text_eng else "No text extracted.") # Print first 500 chars

        # Placeholder: Test with Hindi if needed (requires tesseract-ocr-hin)
        # text_hin = extract_text_from_image(test_image, lang='hin')
        # print("\n--- Extracted Text (Hindi) ---")
        # print(text_hin[:500] + "..." if text_hin else "No text extracted (or Hindi pack missing).")
    else:
        print(f"Test image not found at: {test_image}. Run pdf_processor first.")